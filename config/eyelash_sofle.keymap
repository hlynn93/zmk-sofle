#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    macros {
        allmods: allmods {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(LG(LEFT_CONTROL)))>;
            label = "ALLMODS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4  &kp N5    &kp UP_ARROW     &kp N6                &kp N7       &kp N8     &kp N9           &kp N0    &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R   &kp T     &kp DOWN_ARROW   &kp Y                 &kp U        &kp I      &kp O            &kp P     &kp BSLH
&kp LCTRL   &kp A      &kp S         &kp D         &kp F   &kp G     &kp LEFT_ARROW   &kp H                 &kp J        &kp K      &kp L            &kp SEMI  &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V   &kp B     &kp RIGHT_ARROW  &kp N                 &kp M        &kp COMMA  &kp DOT          &kp FSLH  &kp ENTER
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &mo 3     &kp ENTER        &mt LEFT_SHIFT SPACE  &lt 2 SPACE  &allmods   &kp RIGHT_SHIFT  &mo 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        L1 {
            bindings = <
&trans            &trans            &trans        &trans         &trans            &trans                  &mmv MOVE_UP     &trans                 &trans          &trans     &trans         &trans  &trans
&trans            &kp TILDE         &kp QUESTION  &kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_PARENTHESIS    &mmv MOVE_DOWN   &kp RIGHT_PARENTHESIS  &kp UNDERSCORE  &kp PLUS   &kp PIPE       &trans  &trans
&kp LEFT_CONTROL  &kp GRAVE         &kp SLASH     &kp COMMA      &kp PERIOD        &kp LEFT_BRACE          &mmv MOVE_LEFT   &kp RIGHT_BRACE        &kp MINUS       &kp EQUAL  &kp BACKSLASH  &trans  &trans
&kp LEFT_SHIFT    &trans            &trans        &trans         &trans            &kp LEFT_BRACKET        &mmv MOVE_RIGHT  &kp RIGHT_BRACKET      &trans          &trans     &trans         &trans  &kp ENTER
&trans            &kp LEFT_CONTROL  &kp LEFT_GUI  &kp LEFT_ALT   &trans            &trans                  &mkp LCLK        &mkp LCLK              &mkp RCLK       &trans     &trans         &trans
            >;
        };

        navigation {
            bindings = <
&kp GRAVE      &kp F1     &kp F2     &kp F3      &kp F4       &kp F5             &mmv MOVE_UP     &kp F6     &kp F7     &kp F8      &kp F9     &kp F10           &kp DELETE
&trans         &trans     &trans     &trans      &trans       &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP  &kp HOME   &kp UP      &kp END    &kp MINUS         &kp EQUAL
&trans         &trans     &trans     &trans      &trans       &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN  &kp LEFT   &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LC(LS(Z))  &kp LC(Z)  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &mkp LCLK  &mkp RCLK  &kp INSERT  &kp F11    &kp F12           &kp ENTER
&kp C_MUTE     &trans     &trans     &trans      &trans       &kp CAPS           &mkp LCLK        &trans     &trans     &trans      &trans     &trans
            >;

            display-name = "l2";
            sensor-bindings = <&scroll_encoder>;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_VOLUME_UP    &trans        &trans        &trans        &trans        &trans      &kp BACKSPACE
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_VOLUME_DOWN  &kp MINUS     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS    &kp PRINTSCREEN
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_PREVIOUS     &kp ASTERISK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ENTER   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_NEXT         &kp SLASH     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DELETE  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_PLAY_PAUSE   &trans        &trans        &trans        &kp NUMBER_0  &trans
            >;
        };

        media {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_VOLUME_UP    &kp F6    &kp F7    &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &kp C_VOLUME_DOWN  &trans    &trans    &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &kp C_PREVIOUS     &trans    &trans    &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &kp C_NEXT         &mkp MB1  &mkp MB2  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &kp C_PLAY_PAUSE   &trans    &trans    &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
