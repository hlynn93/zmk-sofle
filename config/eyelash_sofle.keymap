#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    macros {
        allmods: allmods {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(LG(LEFT_CONTROL)))>;
            label = "ALLMODS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESCAPE  &kp N1  &kp N2        &kp N3        &kp N4        &kp N5    &kp UP_ARROW     &kp N6  &kp N7       &kp N8                        &kp N9           &kp N0    &trans
&kp TAB     &kp Q   &kp W         &kp E         &kp R         &kp T     &kp DOWN_ARROW   &kp Y   &kp U        &kp I                         &kp O            &kp P     &kp BACKSPACE
&kp LCTRL   &kp A   &kp S         &kp D         &kp F         &kp G     &kp LEFT_ARROW   &kp H   &kp J        &kp K                         &kp L            &kp SEMI  &kp APOS
&kp LSHFT   &kp Z   &kp X         &kp C         &kp V         &kp B     &kp RIGHT_ARROW  &kp N   &kp M        &kp COMMA                     &kp DOT          &kp FSLH  &kp ENTER
&kp C_MUTE  &trans  &kp LEFT_GUI  &kp LEFT_ALT  &lt 1 ESCAPE  &trans    &kp ENTER        &trans  &lt 2 SPACE  &kp LS(LA(LG(LEFT_CONTROL)))  &kp RIGHT_SHIFT  &mo 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        L1 {
            bindings = <
&trans            &trans     &trans                &trans                 &trans          &trans       &mmv MOVE_UP     &trans     &trans        &trans        &trans        &trans         &trans
&trans            &kp TILDE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE  &kp PLUS     &mmv MOVE_DOWN   &trans     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PIPE       &kp DELETE
&kp LEFT_CONTROL  &kp GRAVE  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp MINUS       &kp EQUAL    &mmv MOVE_LEFT   &trans     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp BACKSLASH  &kp INSERT
&kp LEFT_SHIFT    &trans     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans          &trans       &mmv MOVE_RIGHT  &trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans         &kp ENTER
&trans            &trans     &kp LEFT_GUI          &kp LEFT_ALT           &trans          &trans       &mkp LCLK        &mkp LCLK  &mkp RCLK     &kp NUMBER_0  &kp PERIOD    &trans
            >;
        };

        navigation {
            bindings = <
&trans      &trans           &trans       &trans         &trans        &trans      &mmv MOVE_UP     &trans     &trans    &trans    &trans     &trans   &trans
&trans      &kp EXCLAMATION  &kp AT_SIGN  &kp HASH       &kp DOLLAR    &mkp MB4    &mmv MOVE_DOWN   &kp PG_UP  &kp HOME  &kp UP    &kp END    &kp F12  &trans
&trans      &kp PERCENT      &kp CARET    &kp AMPERSAND  &kp ASTERISK  &mkp MB5    &mmv MOVE_LEFT   &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp F11  &trans
&trans      &kp F1           &kp F2       &kp F3         &kp F4        &kp F5      &mmv MOVE_RIGHT  &kp F6     &kp F7    &kp F8    &kp F9     &kp F10  &trans
&kp C_MUTE  &trans           &trans       &trans         &trans        &kp CAPS    &mkp LCLK        &trans     &trans    &trans    &trans     &trans
            >;

            display-name = "l2";
            sensor-bindings = <&scroll_encoder>;
        };

        media {
            bindings = <
&trans       &trans        &trans          &trans            &trans             &trans          &kp C_VOLUME_UP    &trans           &trans           &trans           &trans           &trans            &trans
&trans       &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2      &bt BT_SEL 3       &bt BT_SEL 4    &kp C_VOLUME_DOWN  &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &trans           &kp K_PLAY_PAUSE  &trans
&sys_reset   &bt BT_CLR    &bt BT_CLR_ALL  &trans            &trans             &trans          &kp C_PREVIOUS     &rgb_ug RGB_BRI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_SPI  &trans            &sys_reset
&bootloader  &out OUT_USB  &out OUT_BLE    &ext_power EP_ON  &ext_power EP_OFF  &trans          &kp C_NEXT         &rgb_ug RGB_BRD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_SPD  &trans            &bootloader
&trans       &trans        &trans          &trans            &trans             &trans          &kp C_PLAY_PAUSE   &trans           &trans           &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
